const Admin = require('../models/Admin');
const Transaction = require('../models/Transaction');
const facebookService = require("./facebookService");
const promptpayService = require('./promptpayService');

class PaymentService {
  constructor() {
    this.adminId = process.env.ADMIN_ID || 'default_admin';
  }

  async generatePromptPayQR(amount, transactionId) {
    try {
      console.log('Generating payment QR for:', { amount, transactionId });
      
      // ‡∏£‡∏±‡∏ö‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ö‡∏±‡∏ç‡∏ä‡∏µ‡πÅ‡∏≠‡∏î‡∏°‡∏¥‡∏ô
      const adminBankAccount = await this.getAdminBankAccount();
      const promptPayNumber = adminBankAccount.promptPayNumber;
      
      console.log('Using PromptPay number:', promptPayNumber);
      
      // ‡πÉ‡∏ä‡πâ PromptPay.io ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏™‡∏£‡πâ‡∏≤‡∏á QR Code
      const qrInfo = await promptpayService.generateQRCode(promptPayNumber, amount);
      
      return {
        ...qrInfo,
        transactionId: transactionId
      };
      
    } catch (error) {
      console.error('Payment QR generation error:', error);
      
      // Fallback
      const promptPayNumber = process.env.ADMIN_PROMPTPAY_NUMBER || '0812345678';
      const fallbackQR = promptpayService.generateFallbackQR(promptPayNumber, amount);
      
      return {
        ...fallbackQR,
        transactionId: transactionId
      };
    }
  }

  async generateSellerPaymentQR(transaction) {
    try {
      const adminId = process.env.ADMIN_FB_ID;
      if (!adminId) return;

      const amount = transaction.gameDetails.price;
      const promptPayNumber = transaction.sellerBankInfo.promptPayNumber;
      
      // ‡∏™‡∏£‡πâ‡∏≤‡∏á QR Code URL ‡∏î‡πâ‡∏ß‡∏¢ promptpay.io
      const qrCodeUrl = `https://promptpay.io/${promptPayNumber}/${amount}`;
      
      // ‡∏™‡πà‡∏á QR Code ‡πÉ‡∏´‡πâ‡πÅ‡∏≠‡∏î‡∏°‡∏¥‡∏ô
      await facebookService.sendMessage(adminId, {
        attachment: {
          type: "image",
          payload: { url: qrCodeUrl, is_reusable: true }
        }
      });

      // ‡∏™‡πà‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏Å‡∏≤‡∏£‡πÇ‡∏≠‡∏ô‡πÉ‡∏´‡πâ‡πÅ‡∏≠‡∏î‡∏°‡∏¥‡∏ô
      await facebookService.sendQuickReply(adminId,
        `üí∞ ‡πÇ‡∏≠‡∏ô‡πÄ‡∏á‡∏¥‡∏ô‡πÉ‡∏´‡πâ‡∏ú‡∏π‡πâ‡∏Ç‡∏≤‡∏¢\n\n` +
        `üìã Transaction ID: ${transaction.transactionId}\n` +
        `üë§ ‡∏ú‡∏π‡πâ‡∏Ç‡∏≤‡∏¢: ${transaction.sellerBankInfo.accountName}\n` +
        `üè¶ ‡∏ò‡∏ô‡∏≤‡∏Ñ‡∏≤‡∏£: ${transaction.sellerBankInfo.bankName}\n` +
        `üìû ‡∏û‡∏£‡πâ‡∏≠‡∏°‡πÄ‡∏û‡∏¢‡πå: ${promptPayNumber}\n` +
        `üíµ ‡∏à‡∏≥‡∏ô‡∏ß‡∏ô: ${amount} ‡∏ö‡∏≤‡∏ó\n\n` +
        `‚ö†Ô∏è ‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡∏™‡πÅ‡∏Å‡∏ô QR Code ‡πÄ‡∏û‡∏∑‡πà‡∏≠‡πÇ‡∏≠‡∏ô‡πÄ‡∏á‡∏¥‡∏ô`,
        [
          {
            type: "postback",
            title: "‚úÖ ‡πÇ‡∏≠‡∏ô‡πÄ‡∏á‡∏¥‡∏ô‡πÄ‡∏£‡∏µ‡∏¢‡∏ö‡∏£‡πâ‡∏≠‡∏¢",
            payload: `ADMIN_PAID_SELLER_${transaction.transactionId}`
          },
          {
            type: "postback",
            title: "‚ùå ‡∏°‡∏µ‡∏õ‡∏±‡∏ç‡∏´‡∏≤",
            payload: `ADMIN_PAYMENT_PROBLEM_${transaction.transactionId}`
          }
        ]
      );

    } catch (error) {
      console.error('Generate seller payment QR error:', error);
    }
  }

  async handleSellerBankInfo(sellerId, bankInfo) {
    try {
      const [bankName, accountNumber, accountName] = bankInfo.split('|');
      
      if (!bankName || !accountNumber || !accountName) {
        throw new Error('‡∏£‡∏π‡∏õ‡πÅ‡∏ö‡∏ö‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÑ‡∏°‡πà‡∏ñ‡∏π‡∏Å‡∏ï‡πâ‡∏≠‡∏á');
      }

      // ‡∏Ñ‡πâ‡∏ô‡∏´‡∏≤ transaction ‡∏•‡πà‡∏≤‡∏™‡∏∏‡∏î‡∏Ç‡∏≠‡∏á‡∏ú‡∏π‡πâ‡∏Ç‡∏≤‡∏¢
      const transaction = await Transaction.findOne({ 
        sellerId: sellerId
      }).sort({ createdAt: -1 });

      if (transaction) {
        transaction.sellerBankInfo = {
          bankName: bankName.trim(),
          accountNumber: accountNumber.trim(),
          accountName: accountName.trim(),
          promptPayNumber: accountNumber.trim() // ‡πÉ‡∏ä‡πâ accountNumber ‡πÄ‡∏õ‡πá‡∏ô promptPayNumber
        };
        await transaction.save();
      }
    } catch (error) {
      console.error('Handle seller bank info error:', error);
      throw error;
    }
  }

  async requestSellerBankInfo(sellerId) {
    try {
      await facebookService.sendMessage(sellerId,
        `üè¶ ‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡∏Å‡∏£‡∏≠‡∏Å‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ö‡∏±‡∏ç‡∏ä‡∏µ‡∏ò‡∏ô‡∏≤‡∏Ñ‡∏≤‡∏£\n\n` +
        `‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏£‡∏±‡∏ö‡πÄ‡∏á‡∏¥‡∏ô‡∏à‡∏≤‡∏Å‡∏Å‡∏≤‡∏£‡∏Ç‡∏≤‡∏¢‡∏ö‡∏±‡∏ç‡∏ä‡∏µ‡πÄ‡∏Å‡∏°\n\n` +
        `‡∏™‡πà‡∏á‡πÉ‡∏ô‡∏£‡∏π‡∏õ‡πÅ‡∏ö‡∏ö:\n` +
        `‡∏ä‡∏∑‡πà‡∏≠‡∏ò‡∏ô‡∏≤‡∏Ñ‡∏≤‡∏£|‡πÄ‡∏•‡∏Ç‡∏û‡∏£‡πâ‡∏≠‡∏°‡πÄ‡∏û‡∏¢‡πå|‡∏ä‡∏∑‡πà‡∏≠‡∏ö‡∏±‡∏ç‡∏ä‡∏µ\n\n` +
        `üí° ‡∏ï‡∏±‡∏ß‡∏≠‡∏¢‡πà‡∏≤‡∏á: "‡∏Å‡∏™‡∏¥‡∏Å‡∏£‡πÑ‡∏ó‡∏¢|0812345678|‡∏™‡∏°‡∏ä‡∏≤‡∏¢ ‡πÉ‡∏à‡∏î‡∏µ"\n\n` +
        `‚ö†Ô∏è ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ô‡∏µ‡πâ‡∏à‡∏∞‡∏ñ‡∏π‡∏Å‡πÉ‡∏ä‡πâ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏Å‡∏≤‡∏£‡πÇ‡∏≠‡∏ô‡πÄ‡∏á‡∏¥‡∏ô‡πÉ‡∏´‡πâ‡∏Ñ‡∏∏‡∏ì‡πÄ‡∏ó‡πà‡∏≤‡∏ô‡∏±‡πâ‡∏ô`
      );
    } catch (error) {
      console.error('Request seller bank info error:', error);
    }
  }

  async getAdminBankAccount() {
    try {
      console.log('Getting admin bank account for:', this.adminId);
      
      const admin = await Admin.findOne({ adminId: this.adminId });
      
      if (!admin) {
        console.warn('‡πÑ‡∏°‡πà‡∏û‡∏ö‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÅ‡∏≠‡∏î‡∏°‡∏¥‡∏ô‡πÉ‡∏ô DBÔºå‡πÉ‡∏ä‡πâ‡∏Ñ‡πà‡∏≤‡∏à‡∏≤‡∏Å environment');
        return {
          bankName: process.env.ADMIN_BANK_NAME,
          accountNumber: process.env.ADMIN_ACCOUNT_NUMBER,
          accountName: process.env.ADMIN_ACCOUNT_NAME,
          promptPayNumber: process.env.ADMIN_PROMPTPAY_NUMBER || '0812345678'
        };
      }

      console.log('Found admin:', admin);
      return admin.bankAccount;
    } catch (error) {
      console.error('Get admin bank account error:', error);
      return {
        promptPayNumber: process.env.ADMIN_PROMPTPAY_NUMBER || '0812345678'
      };
    }
  }

  async notifyAdminForPaymentVerification(transactionId, amount, imageUrl) {
    const adminId = process.env.ADMIN_FB_ID;
    
    if (adminId) {
      try {
        // ‡∏™‡πà‡∏á‡∏†‡∏≤‡∏û‡∏´‡∏•‡∏±‡∏Å‡∏ê‡∏≤‡∏ô‡πÉ‡∏´‡πâ‡πÅ‡∏≠‡∏î‡∏°‡∏¥‡∏ô
        await facebookService.sendMessage(adminId, {
          attachment: {
            type: "image",
            payload: { url: imageUrl, is_reusable: true }
          }
        });

        // ‡∏™‡πà‡∏á‡∏õ‡∏∏‡πà‡∏°‡πÉ‡∏´‡πâ‡πÅ‡∏≠‡∏î‡∏°‡∏¥‡∏ô‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö
        await facebookService.sendButtonTemplate(adminId,
          `üîî ‡∏°‡∏µ‡∏´‡∏•‡∏±‡∏Å‡∏ê‡∏≤‡∏ô‡∏Å‡∏≤‡∏£‡∏ä‡∏≥‡∏£‡∏∞‡πÄ‡∏á‡∏¥‡∏ô‡πÉ‡∏´‡∏°‡πà\n\n` +
          `üìã Transaction ID: ${transactionId}\n` +
          `üí∞ ‡∏à‡∏≥‡∏ô‡∏ß‡∏ô: ${amount} ‡∏ö‡∏≤‡∏ó\n\n` +
          `‡πÇ‡∏õ‡∏£‡∏î‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏´‡∏•‡∏±‡∏Å‡∏ê‡∏≤‡∏ô‡∏Å‡∏≤‡∏£‡πÇ‡∏≠‡∏ô‡πÄ‡∏á‡∏¥‡∏ô:`,
          [
            {
              type: "postback",
              title: "‚úÖ ‡∏¢‡∏∑‡∏ô‡∏¢‡∏±‡∏ô‡∏Å‡∏≤‡∏£‡∏ä‡∏≥‡∏£‡∏∞‡πÄ‡∏á‡∏¥‡∏ô",
              payload: `ADMIN_CONFIRM_PAYMENT_${transactionId}`
            },
            {
              type: "postback",
              title: "‚ùå ‡∏Å‡∏≤‡∏£‡∏ä‡∏≥‡∏£‡∏∞‡πÄ‡∏á‡∏¥‡∏ô‡πÑ‡∏°‡πà‡∏ñ‡∏π‡∏Å‡∏ï‡πâ‡∏≠‡∏á",
              payload: `ADMIN_REJECT_PAYMENT_${transactionId}`
            }
          ]
        );

      } catch (error) {
        console.error('Notify admin error:', error);
      }
    }
  }

  async handlePaymentWithProof(userId, transactionId, imageUrl) {
    try {
      const transaction = await Transaction.findOne({ transactionId });
      
      if (!transaction) {
        throw new Error('‡πÑ‡∏°‡πà‡∏û‡∏ö‡∏ò‡∏∏‡∏£‡∏Å‡∏£‡∏£‡∏°‡∏ô‡∏µ‡πâ');
      }

      // ‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å‡∏´‡∏•‡∏±‡∏Å‡∏ê‡∏≤‡∏ô‡∏Å‡∏≤‡∏£‡πÇ‡∏≠‡∏ô
      transaction.paymentProof = {
        imageUrl: imageUrl,
        uploadedAt: new Date()
      };
      transaction.status = 'payment_verification'; // ‡πÄ‡∏õ‡∏•‡∏µ‡πà‡∏¢‡∏ô‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞‡πÄ‡∏õ‡πá‡∏ô‡∏£‡∏≠‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö
      await transaction.save();

      // ‡πÅ‡∏à‡πâ‡∏á‡πÅ‡∏≠‡∏î‡∏°‡∏¥‡∏ô‡πÉ‡∏´‡πâ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏´‡∏•‡∏±‡∏Å‡∏ê‡∏≤‡∏ô
      await this.notifyAdminForPaymentVerification(transactionId, transaction.paymentAmount, imageUrl);

      // ‡πÅ‡∏à‡πâ‡∏á‡∏ú‡∏π‡πâ‡∏ã‡∏∑‡πâ‡∏≠
      await facebookService.sendMessage(userId,
        `‚úÖ ‡∏£‡∏±‡∏ö‡∏´‡∏•‡∏±‡∏Å‡∏ê‡∏≤‡∏ô‡∏Å‡∏≤‡∏£‡πÇ‡∏≠‡∏ô‡πÄ‡∏á‡∏¥‡∏ô‡πÄ‡∏£‡∏µ‡∏¢‡∏ö‡∏£‡πâ‡∏≠‡∏¢‡πÅ‡∏•‡πâ‡∏ß!\n\n` +
        `üí∞ ‡∏à‡∏≥‡∏ô‡∏ß‡∏ô: ${transaction.paymentAmount} ‡∏ö‡∏≤‡∏ó\n\n` +
        `üïí ‡∏£‡∏∞‡∏ö‡∏ö‡∏Å‡∏≥‡∏•‡∏±‡∏á‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏Å‡∏≤‡∏£‡∏ä‡∏≥‡∏£‡∏∞‡πÄ‡∏á‡∏¥‡∏ô\n` +
        `‚è≥ ‡πÇ‡∏î‡∏¢‡∏õ‡∏Å‡∏ï‡∏¥‡πÉ‡∏ä‡πâ‡πÄ‡∏ß‡∏•‡∏≤‡πÑ‡∏°‡πà‡πÄ‡∏Å‡∏¥‡∏ô 5 ‡∏ô‡∏≤‡∏ó‡∏µ\n\n` +
        `üìû ‡∏´‡∏≤‡∏Å‡∏°‡∏µ‡∏Ç‡πâ‡∏≠‡∏™‡∏á‡∏™‡∏±‡∏¢ ‡∏ï‡∏¥‡∏î‡∏ï‡πà‡∏≠ support ‡∏ó‡∏µ‡πà Line : @gameruleTh`
      );

      return transaction;
    } catch (error) {
      console.error('Handle payment with proof error:', error);
      throw error;
    }
  }
}


module.exports = new PaymentService();